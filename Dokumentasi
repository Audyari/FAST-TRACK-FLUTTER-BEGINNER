Mapping Collections di flutter

"preview UI" 

https://dartpad.dev/

mapping collections adalah proses untuk mengubah sebuah koleksi data (seperti list atau map)
menjadi widget-widget yang dapat ditampilkan di UI.


=======================

contoh tanpa parameter : 

import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Mapping Collections Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  final List<String> items = [
    'Item 1',
    'Item 2',
    'Item 3',
    'Item 4',
    'Item 5',
    'Item 6'
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Mapping Collections Example'),
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
              itemCount: items.length,
              itemBuilder: (context, index) {
                return ListTile(
                  title: Text(items[index]),
                );
              },
            ),
          ),
          Expanded(
            child: GridView.count(
              crossAxisCount: 2,
              children: items.map((item) {
                return Card(
                  child: Center(
                    child: Text(item),
                  ),
                );
              }).toList(),
            ),
          ),
        ],
      ),
    );
  }
}


==========================================

contoh dengan parameter : 

menggunakkan GridView.builder() atau ListView

dengan ListView :

====================================code nya 

import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Mapping Collections Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  final List<Map<String, dynamic>> items = [
    {'title': 'Item 1', 'isImportant': true},
    {'title': 'Item 2', 'isImportant': false},
    {'title': 'Item 3', 'isImportant': true},
    {'title': 'Item 4', 'isImportant': false},
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Mapping Collections with Parameters'),
      ),
      body: ListView.builder(
        itemCount: items.length,
        itemBuilder: (context, index) {
          final item = items[index];
          return ListTile(
            title: Text(item['title']),
            trailing: item['isImportant']
                ? Icon(Icons.star, color: Colors.amber)
                : null,
          );
        },
      ),
    );
  }
}

===============================================

dengan GridView

contoh code nya :

import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Mapping Collections Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  final List<Map<String, dynamic>> items = [
    {'title': 'Item 1', 'isImportant': true},
    {'title': 'Item 2', 'isImportant': false},
    {'title': 'Item 3', 'isImportant': true},
    {'title': 'Item 4', 'isImportant': false},
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Mapping Collections Example'),
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
              itemCount: items.length,
              itemBuilder: (context, index) {
                final item = items[index];
                return ListTile(
                  title: Text(item['title']),
                  trailing: item['isImportant']
                      ? Icon(Icons.star, color: Colors.amber)
                      : null,
                );
              },
            ),
          ),
          Expanded(
            child: GridView.builder(
              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 2,
              ),
              itemCount: items.length,
              itemBuilder: (context, index) {
                final item = items[index];
                return Card(
                  child: Center(
                    child: Text(item['title']),
                  ),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}


======================================================
